{"version":3,"sources":["utils/fetchClient.ts","components/ReplyForm/ReplyForm.tsx","api/comments.ts","components/CommentItem/CommentItem.tsx","components/CommentList/CommentList.tsx","components/Pagination/Pagination.tsx","types/SortType.ts","utils/paginationGererator.ts","components/SortBar/SortBar.tsx","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","serverItemsCount","get","items","json","client","sanitizeOptions","allowedTags","allowedAttributes","a","ReplyForm","commentIdToReply","setCommentIdToReply","setIsCommentAdded","useState","name","setName","isNameValid","setIsNameValid","mail","setMail","isMailValid","setIsMailValid","page","setPage","isPageValid","setIsPageValid","text","setText","sanitizedText","setSanitizedText","isTextValid","setIsTextValid","file","setFile","inputKey","setInputKey","resetsFileInput","randomString","Math","random","toString","reRef","useRef","textRef","handleTextDecorate","openTag","closeTag","textVal","current","cursorStart","selectionStart","cursorEnd","selectionEnd","console","log","currText","substring","KID","process","REACT_APP_S_ID","AK","REACT_APP_S_KEY","uploadFile","fileToUpload","s3","ReactS3Client","bucketName","region","accessKeyId","secretAccessKey","res","location","onFileChange","event","addedFile","target","files","resizeFile","fileToResize","Resizer","imageFileResizer","uri","type","size","window","alert","handlerSubmit","preventDefault","executeAsync","token","reset","parrentId","user","onSubmit","className","htmlFor","id","placeholder","required","pattern","value","onChange","onBlur","trim","length","test","role","data-bs-toggle","data-bs-target","aria-controls","aria-selected","onClick","currentText","sanitizeHtml","replace","disabled","aria-labelledby","ref","rows","dangerouslySetInnerHTML","__html","accept","sitekey","REACT_APP_GC","CommentItem","comment","fileType","setFileType","lightboxOpen","setLightboxOpen","useEffect","dateString","date","Date","getMonth","getDate","getFullYear","month","day","year","getHours","getMinutes","hour","minutes","getCommentDate","createdAt","src","alt","toggler","sources","label","filename","split","pop","exportFile","blob","style","margin","Number","CommentList","comments","isChild","classNames","map","childrenComments","SortType","Pagination","props","total","perPage","currentPage","onPageChange","totalPages","ceil","allPages","from","to","numbers","n","push","getNumbers","isFirstPage","isLastPage","data-cy","href","aria-disabled","active","SortBar","sortType","setSortType","aria-label","includes","byNameAsc","byNameDesc","xmlns","width","height","fill","viewBox","d","byMailAsc","byMailDesc","byDateAsc","byDateDesc","Loader","App","setComments","totalCommentsCount","setTotalCommentsCount","setCurrentPage","isLoading","setIsLoading","isCommentAdded","loadComments","useCallback","sort","dataFromServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4380be4d.chunk.js","sourcesContent":["const BASE_URL = 'https://main--silver-kleicha-fba498.netlify.app/.netlify/functions/server';\n// const BASE_URL = 'http://localhost:9000/.netlify/functions/server';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  // eslint-disable-next-line\n  data: any = null, // we can send any data to the server\n): Promise<{ serverItemsCount: string | null; items: Promise<T> }> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(0)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return {\n        serverItemsCount: response.headers.get('comments-count'),\n        items: response.json(),\n      };\n\n      // return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  // eslint-disable-next-line\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  // eslint-disable-next-line\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { FC, useRef, useState } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport Resizer from 'react-image-file-resizer';\nimport ReactS3Client from 'react-aws-s3-typescript';\nimport sanitizeHtml from 'sanitize-html';\nimport { postComment } from '../../api/comments';\n\ninterface Props {\n  commentIdToReply: number | null,\n  setCommentIdToReply: (id: number | null) => void,\n  setIsCommentAdded:(flag: boolean) => void,\n}\n\nconst sanitizeOptions = {\n  allowedTags: ['code', 'i', 'strong', 'a', 'br'],\n  allowedAttributes: {\n    a: ['href', 'title'],\n  },\n};\n\nexport const ReplyForm: FC<Props> = ({\n  commentIdToReply,\n  setCommentIdToReply,\n  setIsCommentAdded,\n}) => {\n  const [name, setName] = useState('');\n  const [isNameValid, setIsNameValid] = useState(true);\n  const [mail, setMail] = useState('');\n  const [isMailValid, setIsMailValid] = useState(true);\n  const [page, setPage] = useState('');\n  const [isPageValid, setIsPageValid] = useState(true);\n  const [text, setText] = useState('');\n  const [sanitizedText, setSanitizedText] = useState('');\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [isTextValid, setIsTextValid] = useState(true);\n  const [file, setFile] = useState<File | string>();\n  const [inputKey, setInputKey] = useState('');\n\n  const resetsFileInput = () => {\n    const randomString = Math.random().toString(36);\n\n    setFile('');\n    setInputKey(randomString);\n  };\n\n  const reRef = useRef<ReCAPTCHA>(null);\n  const textRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleTextDecorate = (openTag:string, closeTag:string) => {\n    const textVal = textRef.current;\n\n    if (!textVal) {\n      return;\n    }\n\n    const cursorStart = textVal.selectionStart;\n    const cursorEnd = textVal.selectionEnd;\n\n    // eslint-disable-next-line no-console\n    console.log(cursorStart, cursorEnd, text);\n\n    if (cursorStart === cursorEnd) {\n      setText((currText) => currText.substring(0, cursorStart)\n        + openTag\n        + closeTag\n        + currText.substring(cursorEnd));\n\n      return;\n    }\n\n    // const selectedText = text.substring(cursorStart, cursorEnd);\n\n    setText((currText) => currText.substring(0, cursorStart)\n      + openTag\n      + currText.substring(cursorStart, cursorEnd)\n      + closeTag\n      + currText.substring(cursorEnd));\n  };\n\n  const KID = process.env.REACT_APP_S_ID || '';\n  const AK = process.env.REACT_APP_S_KEY || '';\n\n  const uploadFile = async (fileToUpload: File) => {\n    const s3 = new ReactS3Client({\n      bucketName: 'comments-spa',\n      region: 'eu-central-1',\n      accessKeyId: KID,\n      secretAccessKey: AK,\n    });\n\n    try {\n      const res = await s3.uploadFile(fileToUpload);\n\n      // eslint-disable-next-line no-console\n      return res.location;\n    } catch (exception) {\n      // eslint-disable-next-line no-console\n      console.log(exception);\n\n      return exception;\n      /* handle the exception */\n    }\n  };\n\n  const onFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const addedFile = event?.target?.files?.[0];\n\n    const resizeFile = (fileToResize: File) => new Promise((resolve) => {\n      Resizer.imageFileResizer(\n        fileToResize,\n        320,\n        240,\n        'WEBP',\n        100,\n        0,\n        (uri) => {\n          resolve(uri);\n        },\n        'file',\n      );\n    });\n\n    if (addedFile) {\n      switch (addedFile.type) {\n        case 'image/png':\n        case 'image/jpg':\n        case 'image/gif':\n          setFile(await resizeFile(addedFile) as File);\n          break;\n        case 'text/plain':\n          if (addedFile.size > 102400) {\n            // eslint-disable-next-line no-alert\n            window.alert('Please upload a file smaller than 100 kB');\n            resetsFileInput();\n\n            return;\n          }\n\n          setFile(addedFile);\n          break;\n        default:\n          // eslint-disable-next-line no-alert\n          window.alert('Please upload only PNG, JPG, GIF or TXT files');\n          resetsFileInput();\n\n          return;\n      }\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(file);\n  };\n\n  const handlerSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const token = await reRef.current?.executeAsync();\n\n    let fileToUpload = '';\n\n    if (file) {\n      fileToUpload = await uploadFile(file as File);\n      if (!fileToUpload) {\n        return;\n      }\n    }\n\n    if (reRef.current) {\n      reRef.current.reset();\n    }\n\n    const obj = {\n      parrentId: commentIdToReply,\n      text,\n      file: fileToUpload,\n      user: {\n        name,\n        mail,\n        page,\n      },\n      token,\n    };\n\n    postComment(obj);\n    setCommentIdToReply(0);\n    setIsCommentAdded(true);\n  };\n\n  return (\n    <>\n      <form onSubmit={handlerSubmit}>\n        <div className=\"row g-3\">\n          <div className=\"col-sm-6\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"name\" className=\"form-label\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              placeholder=\"\"\n              required\n              pattern=\"[A-Za-z0-9]{1,20}\"\n              value={name}\n              onChange={(event) => setName(event.target.value)}\n              onBlur={(event) => {\n                setName(event.target.value.trim());\n                setIsNameValid(event.target.value.trim().length > 0);\n              }}\n            />\n            {!isNameValid && (\n              <div className=\"text-danger\">\n                Valid name is required.\n              </div>\n            )}\n          </div>\n\n          <div className=\"col-sm-6\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"email\" className=\"form-label\">Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"email\"\n              placeholder=\"you@example.com\"\n              required\n              pattern=\"[a-zA-Z0-9._%+-]+@[A-Za-z0-9.-]+\\.[a-z]{2,4}$\"\n              value={mail}\n              onChange={(event) => setMail(event.target.value)}\n              onBlur={(event) => {\n                setMail(event.target.value.trim());\n                setIsMailValid(/[a-zA-Z0-9._%+-]+@[A-Za-z0-9.-]+\\.[a-z]{2,4}$/.test(event.target.value.trim()));\n              }}\n            />\n            {!isMailValid && (\n              <div className=\"text-danger\">\n                Please enter a valid email address.\n              </div>\n            )}\n          </div>\n\n          <div className=\"col-12\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"page\" className=\"form-label\">\n              Page\n              <span className=\"text-muted px-1\">(Optional)</span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"page\"\n              placeholder=\"\"\n              value={page}\n              pattern=\"^(|https?:\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\\\.,@?^=%&amp;:/~\\\\+#]*[\\w\\-\\\\@?^=%&amp;/~\\\\+#])?)$\"\n              onChange={(event) => setPage(event.target.value)}\n              onBlur={(event) => {\n                setPage(event.target.value.trim());\n                setIsPageValid(/^(|https?:\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\\\.,@?^=%&amp;:/~\\\\+#]*[\\w\\-\\\\@?^=%&amp;/~\\\\+#])?)$/.test(event.target.value.trim()));\n              }}\n            />\n            {!isPageValid && (\n              <div className=\"text-danger\">\n                Please enter a valid page address.\n              </div>\n            )}\n          </div>\n\n          <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n            <li className=\"nav-item\" role=\"presentation\">\n              <button\n                className=\"nav-link active\"\n                id=\"home-tab\"\n                data-bs-toggle=\"tab\"\n                data-bs-target={`#input-${commentIdToReply}`}\n                type=\"button\"\n                role=\"tab\"\n                aria-controls=\"home\"\n                aria-selected=\"true\"\n                onClick={() => {\n                  setText(currentText => sanitizeHtml(currentText.replace(/<br \\/>/g, '\\n'), sanitizeOptions));\n                }}\n              >\n                Text input\n              </button>\n            </li>\n            <li className=\"nav-item\" role=\"presentation\">\n              <button\n                className=\"nav-link\"\n                id=\"profile-tab\"\n                data-bs-toggle=\"tab\"\n                data-bs-target={`#preview-${commentIdToReply}`}\n                type=\"button\"\n                role=\"tab\"\n                aria-controls=\"profile\"\n                aria-selected=\"false\"\n                onClick={() => {\n                  setSanitizedText(sanitizeHtml(text.replace(/\\n/g, '<br/>'), sanitizeOptions));\n                }}\n                disabled={!text.length}\n              >\n                Preview\n              </button>\n            </li>\n          </ul>\n          <div className=\"tab-content p-3\" id=\"myTabContent\">\n            <div className=\"tab-pane fade show active\" id={`input-${commentIdToReply}`} role=\"tabpanel\" aria-labelledby=\"home-tab\">\n              <div className=\"container\">\n                <div className=\"row px-0 py-2\">\n                  <div className=\"col-sm-1 px-0\">\n                    {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n                    <label htmlFor=\"text\" className=\"form-label\">Text</label>\n                  </div>\n                  <div className=\"col-sm-11 px-0 text-end\">\n                    <button\n                      className=\"btn btn-light btn-sm\"\n                      type=\"button\"\n                      role=\"tab\"\n                      onClick={() => handleTextDecorate('<strong>', '</strong>')}\n                    >\n                      STRONG\n                    </button>\n                    <button\n                      className=\"btn btn-light btn-sm\"\n                      type=\"button\"\n                      role=\"tab\"\n                      onClick={() => handleTextDecorate('<i>', '</i>')}\n                    >\n                      ITALIC\n                    </button>\n                    <button\n                      className=\"btn btn-light btn-sm\"\n                      type=\"button\"\n                      role=\"tab\"\n                      onClick={() => handleTextDecorate('<code>', '</code>')}\n                    >\n                      CODE\n                    </button>\n                    <button\n                      className=\"btn btn-light btn-sm\"\n                      type=\"button\"\n                      role=\"tab\"\n                      onClick={() => handleTextDecorate('<a href=\"\" title=\"\">', '</a>')}\n                    >\n                      LINK\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-12\">\n                <textarea\n                  className=\"form-control\"\n                  ref={textRef}\n                  id=\"text\"\n                  rows={5}\n                  required\n                  value={text.replace(/<br \\/>/g, '\\n')}\n                  onChange={(event) => {\n                    setText(event.target.value);\n                  }}\n                  onBlur={(event) => {\n                    setText(event.target.value.trim());\n                    setSanitizedText(sanitizeHtml(event.target.value.trim().replace(/\\n/g, '<br/>'), sanitizeOptions));\n                    setIsTextValid(event.target.value.trim().length > 0);\n                  }}\n                />\n                {!isTextValid && (\n                  <div className=\"text-danger\">\n                    Comment must not be empty.\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"tab-pane fade\" id={`preview-${commentIdToReply}`} role=\"tabpanel\" aria-labelledby=\"profile-tab\">\n              {/* eslint-disable-next-line react/no-danger */}\n              <div dangerouslySetInnerHTML={{ __html: sanitizedText }} />\n            </div>\n          </div>\n\n          <div className=\"col-12 mb-1\">\n            <label className=\"input-group-text\" htmlFor=\"inputGroupFile\">\n              <input\n                type=\"file\"\n                className=\"form-control\"\n                id=\"inputGroupFile\"\n                accept=\"image/png, image/jpg, image/gif, text/plain\"\n                key={inputKey || ''}\n                onChange={(event) => onFileChange(event)}\n              />\n              <span className=\"ps-2\">Upload file</span>\n            </label>\n          </div>\n        </div>\n        <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n          <button\n            className=\"btn btn-outline-danger\"\n            type=\"button\"\n            onClick={() => setCommentIdToReply(0)}\n          >\n            Cancel\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"w-15 btn btn-primary\"\n          >\n            Publish\n          </button>\n          <ReCAPTCHA\n            size=\"invisible\"\n            sitekey={process.env.REACT_APP_GC || ''}\n            ref={reRef}\n          />\n        </div>\n      </form>\n    </>\n  );\n};\n","import { client } from '../utils/fetchClient';\nimport { Comment } from '../types/comment';\n\nexport const getComments = (page: number, sort: string) => {\n  return client.get<Comment[]>(`/comments?page=${page}&sort=${sort}`);\n};\n\nexport const postComment = (newComment: Omit<Comment, 'id' | 'childrenComments' | 'user' | 'createdAt' | 'userId'>) => {\n  return client.post<Comment>('/comments', newComment);\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport DownloadLink from 'react-download-link';\nimport FsLightbox from 'fslightbox-react';\nimport { Comment } from '../../types/comment';\nimport { ReplyForm } from '../ReplyForm/ReplyForm';\nimport './CommentItem.scss';\n\ninterface Props {\n  comment: Comment;\n  commentIdToReply: number | null,\n  setCommentIdToReply: (id: number | null) => void,\n  setIsCommentAdded: (flag: boolean) => void,\n}\n\nexport const CommentItem: FC<Props> = ({\n  comment,\n  commentIdToReply,\n  setCommentIdToReply,\n  setIsCommentAdded,\n}) => {\n  const [fileType, setFileType] = useState('');\n  const [lightboxOpen, setLightboxOpen] = useState(false);\n\n  const getDataFromURL = (url:string) => new Promise((resolve) => {\n    setTimeout(() => {\n      fetch(url)\n        .then(response => response.blob())\n        .then(data => {\n          resolve(data);\n        });\n    });\n  });\n\n  const getCommentDate = (dateString: string) => {\n    const date = new Date(dateString);\n\n    const [month, day, year] = [\n      (date.getMonth() + 1) > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`,\n      (date.getDate()) > 9 ? date.getDate() : `0${date.getDate()}`,\n      date.getFullYear(),\n    ];\n    const [hour, minutes] = [\n      date.getHours(),\n      date.getMinutes(),\n    ];\n\n    return `${day}.${month}.${year} в ${hour}:${minutes}`;\n  };\n\n  useEffect(() => {\n    if (!comment.file) {\n      return;\n    }\n\n    fetch(comment.file).then(res => {\n      setFileType(res.headers.get('Content-Type') || '');\n    });\n  }, []);\n\n  return (\n    <div key={comment.id} className=\"comment_item mb-5\">\n      <div className=\"comment_header h-100 px-2 py-2 bg-light border\">\n        <div className=\"comment__user-details container px-0\">\n          <div className=\"row align-items-start\">\n            <div className=\"col-md-5 comment_user\">\n              <span className=\"comment_author fw-bold\">{comment.user.name}</span>\n              <span className=\"comment_date px-2\">{getCommentDate(comment.createdAt)}</span>\n            </div>\n            <div className=\"col-md-3 align-items-end\">\n              <span className=\"comment_author\">{comment.user.mail}</span>\n            </div>\n            <div className=\"col-md-4\">\n              <span className=\"comment_author\">{comment.user.page}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"comment_body p-1 border mb-2\">\n        <div className=\"px-1 pb-2\">\n          {/* eslint-disable-next-line react/no-danger */}\n          <div dangerouslySetInnerHTML={{ __html: comment.text }}>\n          </div>\n          {/* <span className=\"comment_text\">{comment.text}</span> */}\n        </div>\n        {comment.file && (\n          <div className=\"mb-2\">\n            <div className=\"input-group\">\n              <div className=\"input-group-text\">Attachment: </div>\n              {fileType === 'image/webp' && (\n                <div className=\"input-group-text bg-white\">\n                  <img\n                    className=\"img-thumbnail\"\n                    src={comment.file}\n                    alt={comment.id}\n                    role=\"presentation\"\n                    onClick={() => setLightboxOpen(!lightboxOpen)}\n                  />\n                  <FsLightbox\n                    toggler={lightboxOpen}\n                    sources={[comment.file]}\n                  />\n                </div>\n              )}\n              <div className=\"form-control d-flex align-items-center\">\n                <DownloadLink\n                  label=\"Download\"\n                  filename={`${comment.id}_attachment.${comment.file.split('.').pop()}`}\n                  exportFile={() => Promise.resolve(getDataFromURL(comment.file))}\n                  style={{ margin: 0 }}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n          {commentIdToReply !== Number(comment.id) && (\n            <button\n              type=\"submit\"\n              className=\"btn btn-outline-primary\"\n              onClick={() => setCommentIdToReply(Number(comment.id))}\n            >\n              Reply &gt;&gt;\n            </button>\n          )}\n        </div>\n      </div>\n      <div className=\"comment_reply\">\n        {commentIdToReply === Number(comment.id) && (\n          <div className=\"p-2 border mb-3 bg-light\">\n            <ReplyForm\n              commentIdToReply={commentIdToReply}\n              setCommentIdToReply={setCommentIdToReply}\n              setIsCommentAdded={setIsCommentAdded}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { Comment } from '../../types/comment';\nimport { CommentItem } from '../CommentItem/CommentItem';\n\ninterface Props {\n  comments: Comment[];\n  isChild?: boolean;\n  commentIdToReply: number | null,\n  setCommentIdToReply: (id: number | null) => void,\n  setIsCommentAdded: (flag: boolean) => void,\n}\n\nexport const CommentList: FC<Props> = ({\n  comments,\n  isChild = false,\n  commentIdToReply,\n  setCommentIdToReply,\n  setIsCommentAdded,\n}) => {\n  return (\n    <div className={classNames(\n      'comments__thread',\n      { ' ps-5': isChild },\n    )}\n    >\n      {comments.map(comment => (\n        <div\n          key={comment.id}\n          className=\"comments__post\"\n        >\n          <CommentItem\n            comment={comment}\n            commentIdToReply={commentIdToReply}\n            setCommentIdToReply={setCommentIdToReply}\n            setIsCommentAdded={setIsCommentAdded}\n          />\n          {comment.childrenComments && (\n            <CommentList\n              comments={comment.childrenComments}\n              isChild\n              commentIdToReply={commentIdToReply}\n              setCommentIdToReply={setCommentIdToReply}\n              setIsCommentAdded={setIsCommentAdded}\n            />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils/paginationGererator';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const totalPages = Math.ceil(total / perPage);\n  const allPages = getNumbers(1, totalPages);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const handlerPrevClick = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handlerNextClick = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    // eslint-disable-next-line react/react-in-jsx-scope\n    <ul className=\"pagination justify-content-center\">\n      {/* eslint-disable-next-line react/react-in-jsx-scope */}\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isFirstPage,\n          },\n        )}\n      >\n        {/* eslint-disable-next-line react/react-in-jsx-scope */}\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handlerPrevClick}\n        >\n          «\n        </a>\n      </li>\n\n      {allPages.map(page => (\n        // eslint-disable-next-line react/react-in-jsx-scope\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            {\n              active: page === currentPage,\n            },\n          )}\n        >\n          {/* eslint-disable-next-line react/react-in-jsx-scope */}\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      {/* eslint-disable-next-line react/react-in-jsx-scope */}\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isLastPage,\n          },\n        )}\n      >\n        {/* eslint-disable-next-line react/react-in-jsx-scope */}\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handlerNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","// eslint-disable-next-line no-shadow\nexport enum SortType {\n  byNameAsc='name-asc',\n  byNameDesc='name-desc',\n  byMailAsc='mail-asc',\n  byMailDesc='mail-desc',\n  byDateAsc='date-asc',\n  byDateDesc='date-desc',\n}\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React, { FC } from 'react';\nimport { SortType } from '../../types/SortType';\n\ninterface Props {\n  sortType: SortType,\n  setSortType: (sortType: SortType) => void,\n}\nexport const SortBar: FC<Props> = ({ sortType, setSortType }) => {\n  return (\n    <div className=\"container text-center my-3\">\n      <span className=\"p-3\">\n        Sorting by:\n      </span>\n      <div className=\"comments_sort btn-group\" role=\"group\" aria-label=\"Basic example\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'btn',\n            { 'btn btn-primary': sortType.includes('name') },\n            { 'btn btn-light': !sortType.includes('name') },\n          )}\n          onClick={() => {\n            if (sortType === SortType.byNameAsc) {\n              setSortType(SortType.byNameDesc);\n            } else {\n              setSortType(SortType.byNameAsc);\n            }\n          }}\n        >\n          {sortType === SortType.byNameAsc && (\n          // eslint-disable-next-line react/react-in-jsx-scope\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              fill=\"currentColor\"\n              className=\"bi bi-sort\"\n              viewBox=\"0 0 20 18\"\n            >\n              {/* eslint-disable-next-line react/react-in-jsx-scope */}\n              <path\n                d=\"M3.5 2.5a.5.5 0 0 0-1 0v8.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L3.5 11.293V2.5zm3.5 1a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z\"\n              >\n              </path>\n            </svg>\n          )}\n          {sortType === SortType.byNameDesc && (\n          // eslint-disable-next-line react/react-in-jsx-scope\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              fill=\"currentColor\"\n              className=\"bi bi-sort\"\n              viewBox=\"0 0 20 18\"\n            >\n              {/* eslint-disable-next-line react/react-in-jsx-scope */}\n              <path\n                d=\"M3.5 12.5a.5.5 0 0 1-1 0V3.707L1.354 4.854a.5.5 0 1 1-.708-.708l2-1.999.007-.007a.498.498 0 0 1 .7.006l2 2a.5.5 0 1 1-.707.708L3.5 3.707V12.5zm3.5-9a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z\"\n              >\n              </path>\n            </svg>\n          )}\n          User Name\n        </button>\n        <button\n          type=\"button\"\n          className={classNames(\n            'btn',\n            { 'btn btn-primary': sortType.includes('mail') },\n            { 'btn btn-light': !sortType.includes('mail') },\n          )}\n          onClick={() => {\n            if (sortType === SortType.byMailAsc) {\n              setSortType(SortType.byMailDesc);\n            } else {\n              setSortType(SortType.byMailAsc);\n            }\n          }}\n        >\n          {sortType === SortType.byMailAsc && (\n          // eslint-disable-next-line react/react-in-jsx-scope\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              fill=\"currentColor\"\n              className=\"bi bi-sort\"\n              viewBox=\"0 0 20 18\"\n            >\n              {/* eslint-disable-next-line react/react-in-jsx-scope */}\n              <path\n                d=\"M3.5 2.5a.5.5 0 0 0-1 0v8.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L3.5 11.293V2.5zm3.5 1a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z\"\n              >\n              </path>\n            </svg>\n          )}\n          {sortType === SortType.byMailDesc && (\n          // eslint-disable-next-line react/react-in-jsx-scope\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              fill=\"currentColor\"\n              className=\"bi bi-sort\"\n              viewBox=\"0 0 20 18\"\n            >\n\n              {/* eslint-disable-next-line react/react-in-jsx-scope */}\n              <path\n                d=\"M3.5 12.5a.5.5 0 0 1-1 0V3.707L1.354 4.854a.5.5 0 1 1-.708-.708l2-1.999.007-.007a.498.498 0 0 1 .7.006l2 2a.5.5 0 1 1-.707.708L3.5 3.707V12.5zm3.5-9a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z\"\n              >\n              </path>\n            </svg>\n          )}\n          E-mail\n        </button>\n        <button\n          type=\"button\"\n          className={classNames(\n            'btn',\n            { 'btn btn-primary': sortType.includes('date') },\n            { 'btn btn-light': !sortType.includes('date') },\n          )}\n          onClick={() => {\n            if (sortType === SortType.byDateAsc) {\n              setSortType(SortType.byDateDesc);\n            } else {\n              setSortType(SortType.byDateAsc);\n            }\n          }}\n        >\n          {sortType === SortType.byDateAsc && (\n          // eslint-disable-next-line react/react-in-jsx-scope\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              fill=\"currentColor\"\n              className=\"bi bi-sort\"\n              viewBox=\"0 0 20 18\"\n            >\n              {/* eslint-disable-next-line react/react-in-jsx-scope */}\n              <path\n                d=\"M3.5 2.5a.5.5 0 0 0-1 0v8.793l-1.146-1.147a.5.5 0 0 0-.708.708l2 1.999.007.007a.497.497 0 0 0 .7-.006l2-2a.5.5 0 0 0-.707-.708L3.5 11.293V2.5zm3.5 1a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z\"\n              >\n              </path>\n            </svg>\n          )}\n          {sortType === SortType.byDateDesc && (\n          // eslint-disable-next-line react/react-in-jsx-scope\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              fill=\"currentColor\"\n              className=\"bi bi-sort\"\n              viewBox=\"0 0 20 18\"\n            >\n              {/* eslint-disable-next-line react/react-in-jsx-scope */}\n              <path\n                d=\"M3.5 12.5a.5.5 0 0 1-1 0V3.707L1.354 4.854a.5.5 0 1 1-.708-.708l2-1.999.007-.007a.498.498 0 0 1 .7.006l2 2a.5.5 0 1 1-.707.708L3.5 3.707V12.5zm3.5-9a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zM7.5 6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5zm0 3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3zm0 3a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z\"\n              >\n              </path>\n            </svg>\n          )}\n          Date\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './App.scss';\nimport { Comment } from './types/comment';\nimport { getComments } from './api/comments';\nimport { CommentList } from './components/CommentList/CommentList';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { SortType } from './types/SortType';\nimport { SortBar } from './components/SortBar/SortBar';\nimport { Loader } from './components/Loader';\nimport { ReplyForm } from './components/ReplyForm/ReplyForm';\n\nexport const App: React.FC = () => {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [totalCommentsCount, setTotalCommentsCount] = useState(0);\n  const [commentIdToReply, setCommentIdToReply] = useState<number | null>(0);\n  const [sortType, setSortType] = useState(SortType.byDateDesc);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isCommentAdded, setIsCommentAdded] = useState(false);\n  const perPage = 25;\n\n  const loadComments = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const dataFromServer = await getComments(currentPage, sortType);\n\n      setComments(await dataFromServer.items);\n      setTotalCommentsCount(Number(await dataFromServer.serverItemsCount));\n      setIsLoading(false);\n      setIsCommentAdded(false);\n    } catch {\n      setIsLoading(false);\n      setIsCommentAdded(false);\n      throw new Error('Error loading comments');\n    }\n  }, [sortType, currentPage]);\n\n  useEffect(() => {\n    loadComments().then();\n  }, [sortType, currentPage, isCommentAdded]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"mb-5\"></div>\n      {commentIdToReply === null && (\n        <div className=\"px-5\">\n          <div className=\"text-center\">\n            <h1 className=\"fs-3\">Add new comment</h1>\n          </div>\n          <div className=\"container border p-2 bg-light\">\n            {commentIdToReply === null && (\n              <ReplyForm\n                commentIdToReply={commentIdToReply}\n                setCommentIdToReply={setCommentIdToReply}\n                setIsCommentAdded={setIsCommentAdded}\n              />\n            )}\n          </div>\n        </div>\n      )}\n\n      {commentIdToReply !== null && (\n        <div className=\"comments container mb-5\">\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            className=\"btn btn-success\"\n            type=\"button\"\n            onClick={() => setCommentIdToReply(null)}\n          >\n            Add comment\n          </button>\n          <SortBar sortType={sortType} setSortType={setSortType} />\n\n          {isLoading\n            ? <Loader />\n            : (\n              <>\n                <CommentList\n                  comments={comments}\n                  commentIdToReply={commentIdToReply}\n                  setCommentIdToReply={setCommentIdToReply}\n                  setIsCommentAdded={setIsCommentAdded}\n                />\n\n                <Pagination\n                  total={totalCommentsCount}\n                  perPage={perPage}\n                  currentPage={currentPage}\n                  onPageChange={setCurrentPage}\n                />\n              </>\n            )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}